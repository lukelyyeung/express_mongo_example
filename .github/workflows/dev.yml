name: dev

on:
  push:
    branches:
      - dev
jobs:
  ci:
    runs-on: ${{ matrix.os }}
    environment: dev

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    env:
      NODE_ENV: "development"
    steps:
      - name: Checkout üõé
        uses: actions/checkout@master

      - name: Setup node env üèó
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node_modules üì¶
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Installing NPM
        run: npm install

      - name: Building application
        run: npm run build

      - name: Generate deployment package
        run: zip -r deploy.zip * .[^.]* -x "*.git*" "**node_modules**" "src/*"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'
      
      - name: Beanstalk Deploy for app
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: express_example
          environment_name: Expressexample-env
          region: ap-east-1
          version_label: "express_example-${{ steps.format-time.outputs.replaced }}"
          deployment_package: deploy.zip
          use_existing_version_if_available: true

      - name: Deployed!
        run: echo App deployed to ELB